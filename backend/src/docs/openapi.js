/**
 * @fileoverview OpenAPI 3.0 Specification - Genesis Luminal
 * @version 1.0.0
 * @author Genesis Luminal Team
 */
export const openApiSpec = {
    openapi: '3.0.3',
    info: {
        title: 'Genesis Luminal API',
        version: '1.0.0',
        description: `
# Genesis Luminal - Emotion Analysis API

API para an√°lise de emo√ß√µes em texto usando tecnologias de IA.

## ‚ö†Ô∏è IMPORTANTE - DISCLAIMER DE DESENVOLVIMENTO

**üî¥ SISTEMA EM DESENVOLVIMENTO - CONT√âM SIMULA√á√ïES**

- An√°lise de emo√ß√µes est√° em **modo simula√ß√£o**
- Resultados baseados em heur√≠sticas simples
- **N√ÉO usar em ambiente de produ√ß√£o**
- Apenas para fins de demonstra√ß√£o e desenvolvimento

## Funcionalidades

### ‚úÖ Implementadas
- API REST completa
- Valida√ß√£o de entrada
- Tratamento de erros
- Documenta√ß√£o OpenAPI
- Testes automatizados

### üî¥ Simuladas  
- An√°lise de emo√ß√µes (Anthropic Provider)
- Machine Learning (usa heur√≠sticas)

### üü° Planejadas
- Autentica√ß√£o JWT
- Hist√≥rico de an√°lises
- WebSocket real-time
- Cache Redis

## Transpar√™ncia T√©cnica

Este sistema implementa transpar√™ncia total sobre suas capacidades:
- Headers \`X-Genesis-*\` em todas as respostas
- Metadados de simula√ß√£o inclu√≠dos
- Endpoint \`/api/disclaimer\` com detalhes completos
- Classifica√ß√£o clara: [IMPLEMENTED/SIMULATION/PLANNED]
    `,
        contact: {
            name: 'Genesis Luminal Team',
            url: 'https://github.com/PrinceOfEgypt1/Genesis_Luminal_Production',
            email: 'dev@genesis-luminal.com'
        },
        license: {
            name: 'MIT',
            url: 'https://opensource.org/licenses/MIT'
        }
    },
    servers: [
        {
            url: 'http://localhost:3001',
            description: 'Development server'
        },
        {
            url: 'https://api.genesis-luminal.dev',
            description: 'Staging server'
        },
        {
            url: 'https://api.genesis-luminal.com',
            description: 'Production server'
        }
    ],
    paths: {
        '/api/analyze': {
            post: {
                summary: 'üî¥ [SIMULATION] Analisar emo√ß√£o em texto',
                description: `
Analisa as emo√ß√µes presentes em um texto fornecido.

**‚ö†Ô∏è IMPORTANTE: Esta funcionalidade est√° em MODO SIMULA√á√ÉO**

- N√£o usa API real do Anthropic
- Baseado em heur√≠sticas simples
- Precis√£o limitada (~60% em textos simples)
- Apenas para demonstra√ß√£o

### Como funciona (simula√ß√£o):
1. Analisa palavras-chave predefinidas
2. Conta exclama√ß√µes e letras mai√∫sculas
3. Aplica heur√≠sticas de intensidade
4. Retorna resultado simulado

### Para implementa√ß√£o real:
- Configurar \`ANTHROPIC_API_KEY\` v√°lida
- Definir \`FORCE_REAL_ANTHROPIC=true\`
- Implementar tratamento de erros robusto
        `,
                tags: ['Emotion Analysis'],
                operationId: 'analyzeEmotion',
                requestBody: {
                    required: true,
                    content: {
                        'application/json': {
                            schema: {
                                $ref: '#/components/schemas/EmotionAnalysisRequest'
                            },
                            examples: {
                                happy: {
                                    summary: 'Texto feliz',
                                    value: {
                                        text: 'I am absolutely thrilled about this amazing opportunity!',
                                        userId: 'user-123'
                                    }
                                },
                                sad: {
                                    summary: 'Texto triste',
                                    value: {
                                        text: 'This is the worst day of my life.',
                                        userId: 'user-456'
                                    }
                                },
                                neutral: {
                                    summary: 'Texto neutro',
                                    value: {
                                        text: 'The meeting is scheduled for 3 PM.',
                                        userId: 'user-789'
                                    }
                                }
                            }
                        }
                    }
                },
                responses: {
                    '200': {
                        description: 'An√°lise de emo√ß√£o realizada com sucesso',
                        headers: {
                            'X-Genesis-Mode': {
                                description: 'Modo de opera√ß√£o (DEVELOPMENT/PRODUCTION)',
                                schema: { type: 'string' }
                            },
                            'X-Genesis-Simulation': {
                                description: 'Indica se cont√©m simula√ß√µes (ACTIVE/NONE)',
                                schema: { type: 'string' }
                            }
                        },
                        content: {
                            'application/json': {
                                schema: {
                                    allOf: [
                                        { $ref: '#/components/schemas/EmotionAnalysisResult' },
                                        { $ref: '#/components/schemas/DisclaimerWrapper' }
                                    ]
                                },
                                examples: {
                                    joyResult: {
                                        summary: 'Resultado de alegria',
                                        value: {
                                            intensity: 0.85,
                                            dominantAffect: 'joy',
                                            confidence: 0.92,
                                            timestamp: '2024-01-15T10:30:00Z',
                                            metadata: {
                                                model: 'simulation-heuristic-v1',
                                                processingTime: 150,
                                                isSimulated: true,
                                                simulationNote: 'Resultado baseado em heur√≠sticas simples'
                                            },
                                            _disclaimer: {
                                                environment: 'DEVELOPMENT',
                                                warning: 'Este sistema cont√©m funcionalidades simuladas'
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    '400': {
                        description: 'Erro de valida√ß√£o na entrada',
                        content: {
                            'application/json': {
                                schema: {
                                    $ref: '#/components/schemas/ErrorResponse'
                                }
                            }
                        }
                    },
                    '500': {
                        description: 'Erro interno do servidor',
                        content: {
                            'application/json': {
                                schema: {
                                    $ref: '#/components/schemas/ErrorResponse'
                                }
                            }
                        }
                    },
                    '429': {
                        description: 'Rate limit excedido',
                        content: {
                            'application/json': {
                                schema: {
                                    $ref: '#/components/schemas/ErrorResponse'
                                }
                            }
                        }
                    }
                }
            }
        },
        '/api/health': {
            get: {
                summary: '‚úÖ [IMPLEMENTED] Verificar sa√∫de do sistema',
                description: 'Endpoint para verifica√ß√£o de sa√∫de e status do sistema.',
                tags: ['System'],
                operationId: 'healthCheck',
                responses: {
                    '200': {
                        description: 'Sistema funcionando normalmente',
                        content: {
                            'application/json': {
                                schema: {
                                    $ref: '#/components/schemas/HealthResponse'
                                }
                            }
                        }
                    }
                }
            }
        },
        '/api/disclaimer': {
            get: {
                summary: 'üìã [IMPLEMENTED] Disclaimer e transpar√™ncia',
                description: 'Retorna informa√ß√µes completas sobre simula√ß√µes e limita√ß√µes do sistema.',
                tags: ['System'],
                operationId: 'getDisclaimer',
                responses: {
                    '200': {
                        description: 'Disclaimer e informa√ß√µes de transpar√™ncia',
                        content: {
                            'application/json': {
                                schema: {
                                    $ref: '#/components/schemas/DisclaimerResponse'
                                }
                            }
                        }
                    }
                }
            }
        },
        '/api/system/honesty-report': {
            get: {
                summary: 'üìä [IMPLEMENTED] Relat√≥rio de honestidade t√©cnica',
                description: 'Retorna relat√≥rio detalhado sobre o status real de todas as funcionalidades.',
                tags: ['System'],
                operationId: 'getHonestyReport',
                responses: {
                    '200': {
                        description: 'Relat√≥rio de honestidade t√©cnica',
                        content: {
                            'application/json': {
                                schema: {
                                    $ref: '#/components/schemas/HonestyReportResponse'
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    components: {
        schemas: {
            EmotionAnalysisRequest: {
                type: 'object',
                required: ['text', 'userId'],
                properties: {
                    text: {
                        type: 'string',
                        minLength: 1,
                        maxLength: 10000,
                        description: 'Texto para an√°lise de emo√ß√£o',
                        example: 'I am feeling great today!'
                    },
                    userId: {
                        type: 'string',
                        pattern: '^[a-zA-Z0-9_-]+$',
                        minLength: 3,
                        maxLength: 50,
                        description: 'Identificador √∫nico do usu√°rio',
                        example: 'user-123'
                    }
                }
            },
            EmotionAnalysisResult: {
                type: 'object',
                properties: {
                    intensity: {
                        type: 'number',
                        minimum: 0,
                        maximum: 1,
                        description: 'Intensidade da emo√ß√£o (0-1)',
                        example: 0.85
                    },
                    dominantAffect: {
                        type: 'string',
                        enum: ['joy', 'sadness', 'anger', 'fear', 'surprise', 'neutral'],
                        description: 'Emo√ß√£o dominante detectada',
                        example: 'joy'
                    },
                    confidence: {
                        type: 'number',
                        minimum: 0,
                        maximum: 1,
                        description: 'Confian√ßa na an√°lise (0-1)',
                        example: 0.92
                    },
                    timestamp: {
                        type: 'string',
                        format: 'date-time',
                        description: 'Timestamp da an√°lise',
                        example: '2024-01-15T10:30:00Z'
                    },
                    metadata: {
                        type: 'object',
                        properties: {
                            model: {
                                type: 'string',
                                description: 'Modelo usado para an√°lise',
                                example: 'simulation-heuristic-v1'
                            },
                            processingTime: {
                                type: 'number',
                                description: 'Tempo de processamento em ms',
                                example: 150
                            },
                            isSimulated: {
                                type: 'boolean',
                                description: 'Indica se o resultado √© simulado',
                                example: true
                            },
                            simulationNote: {
                                type: 'string',
                                description: 'Nota sobre a simula√ß√£o',
                                example: 'Resultado baseado em heur√≠sticas simples'
                            }
                        }
                    }
                }
            },
            DisclaimerWrapper: {
                type: 'object',
                properties: {
                    _disclaimer: {
                        type: 'object',
                        properties: {
                            environment: {
                                type: 'string',
                                example: 'DEVELOPMENT'
                            },
                            simulatedFeatures: {
                                type: 'number',
                                example: 1
                            },
                            implementedFeatures: {
                                type: 'number',
                                example: 4
                            },
                            honestyScore: {
                                type: 'number',
                                example: 75
                            },
                            warning: {
                                type: 'string',
                                example: 'Este sistema cont√©m funcionalidades simuladas'
                            }
                        }
                    }
                }
            },
            HealthResponse: {
                type: 'object',
                properties: {
                    status: {
                        type: 'string',
                        example: 'ok'
                    },
                    timestamp: {
                        type: 'string',
                        format: 'date-time'
                    },
                    service: {
                        type: 'string',
                        example: 'emotion-analysis'
                    },
                    version: {
                        type: 'string',
                        example: '1.0.0'
                    }
                }
            },
            ErrorResponse: {
                type: 'object',
                properties: {
                    error: {
                        type: 'string',
                        description: 'Mensagem de erro',
                        example: 'Validation failed: text is required'
                    },
                    code: {
                        type: 'string',
                        description: 'C√≥digo do erro',
                        example: 'VALIDATION_ERROR'
                    },
                    timestamp: {
                        type: 'string',
                        format: 'date-time'
                    }
                }
            }
        },
        securitySchemes: {
            ApiKeyAuth: {
                type: 'apiKey',
                in: 'header',
                name: 'X-API-Key',
                description: 'üü° [PLANNED] Autentica√ß√£o via API Key (n√£o implementada)'
            },
            BearerAuth: {
                type: 'http',
                scheme: 'bearer',
                bearerFormat: 'JWT',
                description: 'üü° [PLANNED] Autentica√ß√£o JWT (n√£o implementada)'
            }
        }
    },
    tags: [
        {
            name: 'Emotion Analysis',
            description: 'üî¥ [SIMULATION] Endpoints para an√°lise de emo√ß√µes (simulado)'
        },
        {
            name: 'System',
            description: '‚úÖ [IMPLEMENTED] Endpoints do sistema e monitoramento'
        }
    ]
};

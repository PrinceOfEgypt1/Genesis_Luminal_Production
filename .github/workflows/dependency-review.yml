name: Dependency Review & License Check

on:
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Executar semanalmente às segundas-feiras
    - cron: '0 8 * * 1'

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    name: Review Dependencies
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: high
        fail-on-scopes: runtime
        allow-licenses: |
          MIT
          Apache-2.0
          BSD-2-Clause
          BSD-3-Clause
          ISC
          CC0-1.0
        deny-licenses: |
          GPL-2.0
          GPL-3.0
          AGPL-1.0
          AGPL-3.0
          LGPL-2.0
          LGPL-2.1
          LGPL-3.0
        comment-summary-in-pr: true

  license-check:
    runs-on: ubuntu-latest
    name: License Compliance Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install license checker
      run: npm install -g license-checker

    - name: Check backend licenses
      run: |
        cd backend
        echo "📋 Checking backend licenses..."
        license-checker --json --out ../backend-licenses.json
        license-checker --summary > ../backend-license-summary.txt

    - name: Check frontend licenses
      run: |
        cd frontend
        echo "📋 Checking frontend licenses..."
        license-checker --json --out ../frontend-licenses.json
        license-checker --summary > ../frontend-license-summary.txt

    - name: Generate license report
      run: |
        echo "📊 Generating license compliance report..."
        
        cat > license-compliance-report.md << 'LICENSE_EOF'
        # 📄 License Compliance Report
        
        **Generated:** $(date)
        **Repository:** ${{ github.repository }}
        **Branch:** ${{ github.ref_name }}
        
        ## Summary
        
        This report shows all third-party licenses used in the Genesis Luminal project.
        
        ### Backend Dependencies
        LICENSE_EOF
        
        echo "\`\`\`" >> license-compliance-report.md
        cat backend-license-summary.txt >> license-compliance-report.md
        echo "\`\`\`" >> license-compliance-report.md
        
        echo "" >> license-compliance-report.md
        echo "### Frontend Dependencies" >> license-compliance-report.md
        echo "\`\`\`" >> license-compliance-report.md
        cat frontend-license-summary.txt >> license-compliance-report.md
        echo "\`\`\`" >> license-compliance-report.md
        
        echo "" >> license-compliance-report.md
        echo "## Compliance Status" >> license-compliance-report.md
        echo "" >> license-compliance-report.md
        echo "✅ **Approved Licenses:** MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, CC0-1.0" >> license-compliance-report.md
        echo "❌ **Prohibited Licenses:** GPL-2.0, GPL-3.0, AGPL-1.0, AGPL-3.0, LGPL-2.0, LGPL-2.1, LGPL-3.0" >> license-compliance-report.md

    - name: Check for prohibited licenses
      run: |
        echo "🔍 Checking for prohibited licenses..."
        
        PROHIBITED_FOUND=false
        
        # Lista de licenças proibidas
        PROHIBITED_LICENSES=("GPL-2.0" "GPL-3.0" "AGPL-1.0" "AGPL-3.0" "LGPL-2.0" "LGPL-2.1" "LGPL-3.0")
        
        for license in "${PROHIBITED_LICENSES[@]}"; do
          if grep -q "$license" backend-licenses.json frontend-licenses.json; then
            echo "❌ PROHIBITED LICENSE FOUND: $license"
            PROHIBITED_FOUND=true
          fi
        done
        
        if [ "$PROHIBITED_FOUND" = true ]; then
          echo "🚨 Prohibited licenses detected! Please review and replace dependencies."
          exit 1
        else
          echo "✅ No prohibited licenses found."
        fi

    - name: Upload license reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: license-compliance-reports
        path: |
          *-licenses.json
          *-license-summary.txt
          license-compliance-report.md
        retention-days: 90

  outdated-check:
    runs-on: ubuntu-latest
    name: Check Outdated Dependencies
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Check outdated backend dependencies
      run: |
        cd backend
        echo "📊 Checking outdated backend dependencies..."
        npm outdated --json > ../backend-outdated.json || true
        npm outdated > ../backend-outdated.txt || true

    - name: Check outdated frontend dependencies
      run: |
        cd frontend
        echo "📊 Checking outdated frontend dependencies..."
        npm outdated --json > ../frontend-outdated.json || true
        npm outdated > ../frontend-outdated.txt || true

    - name: Generate outdated dependencies report
      run: |
        echo "📋 Generating outdated dependencies report..."
        
        cat > outdated-dependencies-report.md << 'OUTDATED_EOF'
        # 📈 Outdated Dependencies Report
        
        **Generated:** $(date)
        **Repository:** ${{ github.repository }}
        
        ## Backend Dependencies
        
        \`\`\`
        OUTDATED_EOF
        
        if [ -f "backend-outdated.txt" ] && [ -s "backend-outdated.txt" ]; then
          cat backend-outdated.txt >> outdated-dependencies-report.md
        else
          echo "No outdated dependencies found." >> outdated-dependencies-report.md
        fi
        
        echo "\`\`\`" >> outdated-dependencies-report.md
        echo "" >> outdated-dependencies-report.md
        echo "## Frontend Dependencies" >> outdated-dependencies-report.md
        echo "" >> outdated-dependencies-report.md
        echo "\`\`\`" >> outdated-dependencies-report.md
        
        if [ -f "frontend-outdated.txt" ] && [ -s "frontend-outdated.txt" ]; then
          cat frontend-outdated.txt >> outdated-dependencies-report.md
        else
          echo "No outdated dependencies found." >> outdated-dependencies-report.md
        fi
        
        echo "\`\`\`" >> outdated-dependencies-report.md

    - name: Upload outdated dependencies report
      uses: actions/upload-artifact@v4
      with:
        name: outdated-dependencies-report
        path: |
          *-outdated.json
          *-outdated.txt
          outdated-dependencies-report.md
        retention-days: 30

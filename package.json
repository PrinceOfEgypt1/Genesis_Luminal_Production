{
  "name": "genesis-luminal-monorepo",
  "private": true,
  "workspaces": [
    "frontend",
    "backend"
  ],
  "scripts": {
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "npm run build --workspace=backend",
    "build:frontend": "npm run build --workspace=frontend",
    "dev": "concurrently \"npm:dev:backend\" \"npm:dev:frontend\"",
    "dev:backend": "npm run dev --workspace=backend",
    "dev:frontend": "npm run dev --workspace=frontend",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "npm run test --workspace=backend",
    "test:frontend": "npm run test --workspace=frontend",
    "test:coverage": "npm run test:coverage --workspace=backend && npm run test:coverage --workspace=frontend",
    "lint": "npm run lint --workspace=backend && npm run lint --workspace=frontend",
    "typecheck": "npm run typecheck --workspace=backend",
    "ci": "npm run lint && npm run typecheck && npm run test && npm run build",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:critical": "playwright test tests/user-critical-scenarios.spec.ts",
    "test:e2e:performance": "playwright test tests/performance-testing.spec.ts",
    "test:e2e:visual": "playwright test tests/visual-regression.spec.ts",
    "test:e2e:report": "playwright show-report",
    "test:e2e:install": "playwright install",
    "test:e2e:simple": "playwright test tests/simple-check.spec.ts --headed",
    "test:e2e:diagnosis": "playwright test tests/scientific-diagnosis.spec.ts --headed",
    "test:diagnosis:manual": "./diagnostic-manual-test.sh",
    "test:diagnosis:full": "npm run test:diagnosis:manual && npm run test:e2e:diagnosis",
    "test:e2e:validate": "playwright test tests/quick-validation.spec.ts --headed",
    "test:e2e:validate-fast": "playwright test tests/quick-validation.spec.ts",
    "test:specialized": "npm run test:accessibility && npm run test:performance:custom && npm run test:load && npm run test:security",
    "test:accessibility": "playwright test tests/specialized/accessibility/ --config=tests/specialized/specialized-tests.config.ts",
    "test:performance": "npm run test:lighthouse && playwright test tests/specialized/performance/ --config=tests/specialized/specialized-tests.config.ts",
    "test:lighthouse": "lhci autorun --config=tests/specialized/performance/lighthouse.config.js",
    "test:load": "playwright test tests/specialized/load/ --config=tests/specialized/specialized-tests.config.ts",
    "test:security": "playwright test tests/specialized/security/ --config=tests/specialized/specialized-tests.config.ts",
    "test:audit": "npm audit --audit-level=high",
    "test:specialized:ci": "npm run test:specialized --reporter=json --output-file=specialized-test-results.json",
    "security:audit": "npm audit",
    "security:fix": "npm audit fix",
    "open:report": "xdg-open test-results/specialized/index.html || firefox test-results/specialized/index.html",
    "test:specialized:wsl": "npm run test:accessibility:wsl && npm run test:performance:wsl && npm run test:load:wsl && npm run test:security:wsl",
    "test:performance:custom": "playwright test tests/specialized/performance/ --config=tests/specialized/specialized-tests.config.ts",
    "test:accessibility:wsl": "PWDEBUG=0 playwright test tests/specialized/accessibility/ --config=tests/specialized/specialized-tests.config.ts",
    "test:performance:wsl": "lhci autorun --config=tests/specialized/performance/lighthouse-wsl.config.js",
    "test:load:wsl": "PWDEBUG=0 playwright test tests/specialized/load/ --config=tests/specialized/specialized-tests.config.ts",
    "test:security:wsl": "PWDEBUG=0 playwright test tests/specialized/security/ --config=tests/specialized/specialized-tests.config.ts",
    "security:analyze": "node tests/specialized/security/analyze-vulnerabilities.js",
    "open:report:wsl": "echo \"Report dispon√≠vel em: test-results/specialized/index.html\" && echo \"Para abrir no Windows: explorer.exe test-results/specialized/index.html\"",
    "test:specialized:simple": "npm run test:accessibility:simple && npm run test:load:simple && npm run test:security:simple",
    "test:accessibility:simple": "playwright test tests/specialized/accessibility/ --config=tests/specialized/specialized-tests.config.ts",
    "test:load:simple": "playwright test tests/specialized/load/ --config=tests/specialized/specialized-tests.config.ts",
    "test:security:simple": "playwright test tests/specialized/security/ --config=tests/specialized/specialized-tests.config.ts",
    "test:accessibility:demo": "echo \"üîç Executando testes de acessibilidade...\" && playwright test tests/specialized/accessibility/ --config=tests/specialized/specialized-tests.config.ts --headed || echo \"‚ö†Ô∏è Necess√°rio frontend rodando\"",
    "test:security:demo": "echo \"üõ°Ô∏è Executando testes de seguran√ßa...\" && playwright test tests/specialized/security/ --config=tests/specialized/specialized-tests.config.ts --headed || echo \"‚ö†Ô∏è Necess√°rio backend rodando\"",
    "test:validate-only": "echo \"üîç Validando configura√ß√£o...\" && node tests/specialized/validate-setup-wsl.js",
    "security:analyze-safe": "echo \"üõ°Ô∏è Analisando vulnerabilidades...\" && node tests/specialized/security/analyze-vulnerabilities-safe.js",
    "test:demo": "playwright test --config=tests/specialized/demo-tests.config.js",
    "test:demo:headed": "playwright test --config=tests/specialized/demo-tests.config.js --headed",
    "test:framework-validation": "npm run test:demo:minimal && npm run security:analyze-safe && npm run test:validate-only",
    "test:demo:minimal": "playwright test --config=playwright.config.minimal.js tests/specialized/demo-tests.spec.ts",
    "test:specialized:working": "playwright test --config=playwright.config.minimal.js tests/specialized/",
    "test:accessibility:working": "playwright test --config=playwright.config.minimal.js tests/specialized/accessibility/",
    "test:security:working": "playwright test --config=playwright.config.minimal.js tests/specialized/security/",
    "quality:gates": "npm run quality:lint && npm run quality:types && npm run quality:test && npm run quality:build",
    "quality:lint": "npm run lint --workspaces --if-present && echo \"‚úÖ Lint quality gate passed\"",
    "quality:types": "npm run typecheck --workspaces --if-present && echo \"‚úÖ TypeCheck quality gate passed\"",
    "quality:test": "npm run test:coverage && echo \"‚úÖ Coverage quality gate passed\"",
    "quality:build": "npm run build && echo \"‚úÖ Build quality gate passed\"",
    "test:coverage:enforce": "npm run test:coverage && node quality-gates-check.js",
    "perf:budget": "lighthouse http://localhost:5173 --chrome-flags=\"--headless --no-sandbox\" --quiet",
    "perf:analyze": "npm run build && npm run bundle:analyze",
    "bundle:analyze": "npm run build -- --analyze",
    "bundle:size": "node -e \"console.log(\"Bundle analysis running...\")\"",
    "ci:quality": "npm run quality:gates",
    "ci:performance": "npm run perf:budget",
    "ci:security": "npm audit --audit-level moderate",
    "docs:generate": "typedoc"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@lhci/cli": "^0.15.1",
    "@playwright/test": "^1.40.0",
    "@types/supertest": "^6.0.3",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "artillery": "^2.0.25",
    "concurrently": "^8.2.2",
    "supertest": "^7.1.4",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1"
  }
}
